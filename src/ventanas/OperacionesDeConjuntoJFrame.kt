package ventanas

import java.awt.event.ActionEvent
import java.awt.event.ActionListener
import java.io.File
import java.util.*
import javax.swing.JButton
import javax.swing.JComboBox
import javax.swing.JLabel
import Archivo
import DFA
import Estado
import com.mxgraph.view.mxGraph

/**
 * Created by user02 on 07/09/2016.
 */

/**
 *
 * @author user02
 */
public class OperacionesDeConjuntoJFrame(var frame: JframeMenu) : javax.swing.JFrame() {

    /**
     * Creates new form OperacionesDeConjuntoJFrame
     */
    init {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */

    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    fun initComponents() {

        DFA1 = javax.swing.JComboBox<String>();
        DFA2 =  javax.swing.JComboBox<String>();
        Operacion = javax.swing.JComboBox<String>();
        Aceptacion =  JButton();
        Cancelar =  JButton();
        jLabel1 =  javax.swing.JLabel();
        jLabel2 = javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        val path = "DFA/"

        var files: String
        val folder = File(path)
        val listOfFiles = folder.listFiles()
        var vectorDfa: Vector<String> = Vector<String>()
        for (i in listOfFiles.indices) {

            if (listOfFiles[i].isFile()) {
                files = listOfFiles[i].getName()
                if (files.endsWith(".txt") || files.endsWith(".TXT")) {
                    vectorDfa.add(files)
                }
            }
        }
        (DFA1 as JComboBox<String>).setModel( javax.swing.DefaultComboBoxModel<String>(vectorDfa));

        (DFA2 as JComboBox<String>).setModel( javax.swing.DefaultComboBoxModel<String>(vectorDfa));

        var vectorOperaciones: Vector<String> = Vector<String>()
        vectorOperaciones.add("UNION")
        vectorOperaciones.add("INTERSECION")
        vectorOperaciones.add("RESTA")
        vectorOperaciones.add("COMPLEMENTO")
        (Operacion as JComboBox<String>).setModel(javax.swing.DefaultComboBoxModel<String>(vectorOperaciones ));

        (Aceptacion as JButton).setText("Aceptar");
        (Aceptacion as JButton).addActionListener(ActionListener { evt -> AceptacionActionPerformed(evt) })

        (Cancelar as JButton).setText("Cancelar");
        (Cancelar as JButton).addActionListener(ActionListener { evt -> CancelarActionPerformed(evt) })

        (jLabel1 as JLabel).setText("DFA1");

        (jLabel2 as JLabel).setText("DFA2");

        var layout =  javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(63, 63, 63)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(Aceptacion)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                                        .addComponent(jLabel1)
                                                                        .addComponent(jLabel2))
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(DFA2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addComponent(DFA1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE.toInt())
                                                .addComponent(Cancelar))
                                        .addGroup(layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(Operacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(69, 69, 69))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(81, 81, 81)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(DFA1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel1))
                                .addGap(21, 21, 21)
                                .addComponent(Operacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(19, 19, 19)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(DFA2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE.toInt())
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(Aceptacion)
                                        .addComponent(Cancelar))
                                .addGap(49, 49, 49))
        );

        pack();
    }// </editor-fold>

    private fun  CancelarActionPerformed(evt: ActionEvent?) {
    this.isVisible = false
    }

    private fun  AceptacionActionPerformed(evt: ActionEvent?) {
        var DF1 = Archivo().leerAutomata("DFA/"+(DFA1 as JComboBox<String>).selectedItem.toString())
        var DF2 = Archivo().leerAutomata("DFA/"+(DFA2 as JComboBox<String>).selectedItem.toString())
        if((Operacion as JComboBox<String>).selectedItem.toString()=="UNION"){
          DFA3 = DFA3.union(DF1,DF2)
        }else if((Operacion as JComboBox<String>).selectedItem.toString()=="INTERSECION"){
            DFA3 = DFA3.intersecion(DF1,DF2)
        }else if((Operacion as JComboBox<String>).selectedItem.toString()=="RESTA"){
            DFA3 = DFA3.resta(DF1,DF2)
        }else if((Operacion as JComboBox<String>).selectedItem.toString()=="COMPLEMENTO"){
            DFA3 = DFA3.complemento(DF1)
        }
       frame.graph.model.beginUpdate()
        frame.graph.removeCells(frame.graph.getChildVertices(frame.graph.defaultParent))
        frame.graph.model.endUpdate()
        var dfa = DFA3
        for (estados in dfa.estados) {
            var inicial = false
            if (estados.NombreEstado.equals(dfa.estadoInicial.NombreEstado)){
                inicial = true
            }
            var x =Random()
            var y = Random()
            estados.Vertex = frame.Dibujar(true,inicial,estados.EsAcceptable,estados.NombreEstado, x.nextInt(500),y.nextInt(500),frame.graph)

        }
        for (estados in dfa.transiciones){
            frame.graph.model.beginUpdate()
            frame.graph.insertEdge(parent, null, estados.Simbolo, dfa.obtenerEstado(estados.EstadoInicial.NombreEstado).Vertex, dfa.obtenerEstado(estados.EstadoFinal.NombreEstado).Vertex)
            frame.graph.model.endUpdate()

        }
        this.isVisible = false
    }

    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify
    var Aceptacion: JButton? = null
    var Cancelar: JButton? = null
    var DFA1: JComboBox<String>? = null
    var DFA2: JComboBox<String>? = null
    var Operacion: JComboBox<String>? = null
    var jLabel1: JLabel? = null
    var jLabel2:JLabel? = null
    var DFA3 = DFA(mutableListOf(), mutableListOf(), Estado("", false), mutableListOf())

    // End of variables declaration
}
